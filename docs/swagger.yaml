swagger: "2.0"
info:
  description: "First prototype of the API."
  version: "1.0.0"
  title: "Expiry Util"
  contact:
    email: "ivgraai@gmail.com"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "good"
  description: "Access to goods"
- name: "user"
  description: "Operations about user"
- name: "request"
  description: "List and accept needs"
schemes:
- "http"
paths:
  /user:
    get:
      tags:
      - "user"
      summary: "Login user"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "Access token can now be used"
          schema:
            type: "string"
            format: "uuid"
    post:
      tags:
      - "user"
      summary: "Register user"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UserSignUpRequest"
      responses:
        "200":
          description: "User is successfully created"
    delete:
      tags:
      - "user"
      summary: "Unregister user"
      description: ""
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      responses:
        "200":
          description: "Profile deleted"
  /good/add:
    post:
      tags:
      - "good"
      summary: "Share a new good"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      - name: "image"
        in: "formData"
        required: false
        type: "file"
      - name: "name"
        in: "formData"
        required: true
        type: "string"
      - name: "expiry"
        in: "formData"
        required: true
        type: "string"
        format: "date"
      - name: "location.latitude"
        in: "formData"
        required: false
        type: "number"
        format: "float"
      - name: "location.longitude"
        in: "formData"
        required: false
        type: "number"
        format: "float"
      - name: "available"
        in: "formData"
        required: true
        type: "boolean"
      responses:
        "200": # entity id
          description: "Good is added"
  /good/image/{id}:
    get:
      tags:
      - "good"
      summary: "Find image by identifier"
      description: ""
      produces:
      - "image/png"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "size"
        in: "query"
        required: true
        type: "string"
        enum:
        - "small"
        - "large"
      responses:
        "200":
          description: "Photo in PNG format"
  /good/all:
    get:
      tags:
      - "good"
      summary: "Fetch my goods"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      responses:
        "200":
          description: "Results"
          schema:
            $ref: "#/definitions/GoodAllResponse"
  /good/nearby:
    get:
      tags:
      - "good"
      summary: "Fetch available goods"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "header"
        required: false
        type: "string"
      - name: "location.latitude"
        in: "query"
        required: true
        type: "number"
        format: "float"
      - name: "location.longitude"
        in: "query"
        required: true
        type: "number"
        format: "float"
      - name: "radius"
        in: "query"
        required: false
        type: "integer"
        default: 3000
        format: "int32"
      responses:
        "200":
          description: "Ordered result by distance"
          schema:
            $ref: "#/definitions/GoodNearbyResponse"
  /good/need:
    post:
      tags:
      - "good"
      summary: "Request the good"
      description: ""
      consumes:
      - "application/json"
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/GoodNeedRequest"
      responses:
        "200":
          description: "Our need shown"
  /good/{id}:
    get:
      tags:
      - "good"
      summary: "Check status of the good"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "header"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Object"
          schema:
            $ref: "#/definitions/GoodResponse"
  /request/all:
    get:
      tags:
      - "request"
      summary: "Find all by good"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      - name: "goodId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Collection"
          schema:
            $ref: "#/definitions/RequestAllResponse"
  /request/{id}:
    put:
      tags:
      - "request"
      summary: "Approve a request"
      description: ""
      parameters:
      - name: "token"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "message"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/RequestChangeRequest"
      responses:
        "200":
          description: "Need is updated"
definitions:
  UserSignUpRequest:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
  GoodAllResponse:
    type: "array"
    items:
      properties:
        name:
          type: "string"
        expiry:
          type: "string"
          format: "date"
        isRequestedByOther: # counter
          type: "boolean"
        id:
          type: "integer"
          format: "int64"
  GoodNearbyResponse:
    type: "array"
    items:
      properties:
        name:
          type: "string"
        expiry:
          type: "string"
          format: "date"
        distance:
          type: "number"
          format: "float"
        id:
          type: "integer"
          format: "int64"
        isRequestedByMe:
          type: "boolean"
  GoodNeedRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      message:
        type: "string"
  GoodResponse:
    type: "object"
    properties:
      name:
        type: "string"
      expiry:
        type: "string"
        format: "date"
      address:
        $ref: "#/definitions/Address"
      username:
        type: "string"
      isAccepted:
        type: "boolean"
      myMessage:
        type: "string"
      replyMessage:
        type: "string"
  RequestAllResponse:
    type: "array"
    items:
      properties:
        username:
          type: "string"
        datetime:
          type: "string"
          format: "date-time"
        message:
          type: "string"
        id: # redundant
          type: "integer"
          format: "int64"
  Address:
    type: "object"
    properties:
      city:
        type: "string"
      street:
        type: "string"
      region:
        type: "string"
      postalCode:
        type: "string"
      country:
        type: "string"
      name:
        type: "string"
  RequestChangeRequest:
    type: "string"
externalDocs:
  description: "Find out more about the project"
  url: "https://github.com/ivgraai/expiry-util"